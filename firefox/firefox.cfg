// IMPORTANT: Start your code on the 2nd line

lockPref("app.normandy.api_url", "");
lockPref("app.normandy.enabled", false);
lockPref("app.shield.optoutstudies.enabled", false);
lockPref("app.update.auto", true);
lockPref("beacon.enabled", false);
lockPref("breakpad.reportURL", "");
lockPref("browser.aboutConfig.showWarning", false);
lockPref("browser.aboutHomeSnippets.updateUrL", "");
lockPref("browser.cache.offline.enable", false);
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit", false);
lockPref("browser.crashReports.unsubmittedCheck.autoSubmit2", false);
lockPref("browser.crashReports.unsubmittedCheck.enabled", false);
lockPref("browser.disableResetPrompt", true);
lockPref("browser.fixup.alternate.enabled", false);
lockPref("browser.formfill.enable", false);
lockPref("browser.newtab.preload", false);
lockPref("browser.newtabpage.activity-stream.feeds.telemetry", false);
lockPref("browser.newtabpage.activity-stream.section.highlights.includePocket", false);
lockPref("browser.newtabpage.activity-stream.telemetry", false);
lockPref("browser.newtabpage.enabled", false);
lockPref("browser.newtabpage.enhanced", false);
lockPref("browser.newtabpage.introShown", true);
lockPref("browser.ping-centre.telemetry", false);
lockPref("browser.safebrowsing.appRepURL", "");
lockPref("browser.safebrowsing.blockedURIs.enabled", false);
lockPref("browser.safebrowsing.downloads.enabled", false);
lockPref("browser.safebrowsing.downloads.remote.enabled", false);
lockPref("browser.safebrowsing.downloads.remote.url", "");
lockPref("browser.safebrowsing.enabled", false);
lockPref("browser.safebrowsing.malware.enabled", false);
lockPref("browser.safebrowsing.phishing.enabled", false);
lockPref("browser.safebrowsing.provider.google.advisoryURL", "");
lockPref("browser.safebrowsing.provider.google.gethashURL", "");
lockPref("browser.safebrowsing.provider.google.lists", "");
lockPref("browser.safebrowsing.provider.google.pver", "");
lockPref("browser.safebrowsing.provider.google.reportMalwareMistakeURL", "");
lockPref("browser.safebrowsing.provider.google.reportPhishMistakeURL", "");
lockPref("browser.safebrowsing.provider.google.reportURL", "");
lockPref("browser.safebrowsing.provider.google.updateURL", "");
lockPref("browser.safebrowsing.provider.google4.advisoryName", "");
lockPref("browser.safebrowsing.provider.google4.advisoryURL", "");
lockPref("browser.safebrowsing.provider.google4.dataSharing.enabled", false);
lockPref("browser.safebrowsing.provider.google4.dataSharingURL", "");
lockPref("browser.safebrowsing.provider.google4.gethashURL", "");
lockPref("browser.safebrowsing.provider.google4.lists", "");
lockPref("browser.safebrowsing.provider.google4.reportMalwareMistakeURL", "");
lockPref("browser.safebrowsing.provider.google4.reportPhishMistakeURL", "");
lockPref("browser.safebrowsing.provider.google4.reportURL", "");
lockPref("browser.safebrowsing.provider.google4.updateURL", "");
lockPref("browser.search.geoip.url", "");
lockPref("browser.search.suggest.enabled", false);
lockPref("browser.selfsupport.url", "");
lockPref("browser.send_pings.require_same_host", true);
lockPref("browser.send_pings", false);
lockPref("browser.sessionstore.privacy_level", 2);
lockPref("browser.shell.checkDefaultBrowser", false);
lockPref("browser.startup.homepage_override.buildID", "");
lockPref("browser.startup.homepage_override.mstone", "ignore");
lockPref("browser.tabs.crashReporting.sendReport", false);
lockPref("browser.urlbar.groupLabels.enabled", false);
lockPref("browser.urlbar.quicksuggest.enabled", false);
lockPref("browser.urlbar.speculativeConnect.enabled", false);
lockPref("browser.urlbar.trimURLs", false);
lockPref("config.trim_on_minimize", true);
lockPref("datareporting.healthreport.service.enabled", false);
lockPref("datareporting.healthreport.uploadEnabled", false);
lockPref("datareporting.policy.dataSubmissionEnabled", false);
lockPref("default-browser-agent.enabled", false);
lockPref("device.sensors.ambientLight.enabled", false);
lockPref("device.sensors.enabled", false);
lockPref("device.sensors.motion.enabled", false);
lockPref("device.sensors.orientation.enabled", false);
lockPref("device.sensors.proximity.enabled", false);
lockPref("devtools.onboarding.telemetry.logged", false);
lockPref("dom.battery.enabled", false);
lockPref("dom.event.clipboardevents.enabled", false);
lockPref("dom.event.contextmenu.enabled", false);
lockPref("dom.security.https_only_mode_ever_enabled", true);
lockPref("dom.security.https_only_mode", true);
lockPref("dom.webaudio.enabled", false);
lockPref("experiments.activeExperiment", false);
lockPref("experiments.enabled", false);
lockPref("experiments.manifest.uri", "");
lockPref("experiments.supported", false);
lockPref("extensions.getAddons.cache.enabled", false);
lockPref("extensions.getAddons.showPane", false);
lockPref("extensions.pocket.api", "");
lockPref("extensions.pocket.enabled", false);
lockPref("extensions.pocket.oAuthConsumerKey", "");
lockPref("extensions.pocket.site", "");
lockPref("extensions.screenshots.upload-disabled", true);
lockPref("extensions.shield-recipe-client.api_url", "");
lockPref("extensions.shield-recipe-client.enabled", false);
lockPref("extensions.webservice.discoverURL", "");
lockPref("general.useragent.override", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36");
lockPref("general.warnOnAboutConfig", false);
lockPref("geo.enabled", false);
lockPref("geo.wifi.uri", "");
lockPref("javascript.options.wasm", false);
lockPref("keyword.enabled", false);
lockPref("layout.frame_rate.precise", true);
lockPref("loop.enabled", false);
lockPref("media.autoplay.default", 1);
lockPref("media.autoplay.enabled", false);
lockPref("media.eme.enabled", false);
lockPref("media.gmp-widevinecdm.enabled", false);
lockPref("media.navigator.enabled", false);
lockPref("media.peerconnection.enabled", false);
lockPref("media.video_stats.enabled", false);
lockPref("network.allow-experiments", false);
lockPref("network.captive-portal-service.enabled", false);
lockPref("network.cookie.cookieBehavior", 1);
lockPref("network.dns.disableIPv6", true);
lockPref("network.dns.disablePrefetch", true);
lockPref("network.dns.disablePrefetchFromHTTPS", true);
lockPref("network.dnsCacheEntries", 100);
lockPref("network.dnsCacheExpiration", 60);
lockPref("network.http.referer.spoofSource", true);
lockPref("network.http.referer.XOriginPolicy", 2);
lockPref("network.http.referer.XOriginTrimmingPolicy", 2);
lockPref("network.http.sendRefererHeader", 0);
lockPref("network.http.sendSecureXSiteReferrer", false);
lockPref("network.http.speculative-parallel-limit", 0);
lockPref("network.IDN_show_punycode", true);
lockPref("network.predictor.enable-prefetch", false);
lockPref("network.predictor.enabled", false);
lockPref("network.prefetch-next", false);
lockPref("network.trr.mode", 5);
lockPref("network.websocket.enabled", false);
lockPref("places.history.enabled", false);
lockPref("plugins.enumerable_names", "");
lockPref("privacy.donottrackheader.enabled", true);
lockPref("privacy.donottrackheader.value", 1);
lockPref("privacy.firstparty.isolate", true);
lockPref("privacy.query_stripping", true);
lockPref("privacy.trackingprotection.cryptomining.enabled", true);
lockPref("privacy.trackingprotection.enabled", true);
lockPref("privacy.trackingprotection.fingerprinting.enabled", true);
lockPref("privacy.trackingprotection.pbmode.enabled", true);
lockPref("privacy.usercontext.about_newtab_segregation.enabled", true);
lockPref("security.ssl.disable_session_identifiers", true);
lockPref("services.sync.prefs.sync.browser.newtabpage.activity-stream.showSponsoredTopSite", false);
lockPref("signon.autofillForms", false);
lockPref("startup.homepage_override_url", "");
lockPref("startup.homepage_welcome_url.additional", "");
lockPref("startup.homepage_welcome_url", "");
lockPref("toolkit.telemetry.archive.enabled", false);
lockPref("toolkit.telemetry.bhrPing.enabled", false);
lockPref("toolkit.telemetry.cachedClientID", "");
lockPref("toolkit.telemetry.enabled", false);
lockPref("toolkit.telemetry.firstShutdownPing.enabled", false);
lockPref("toolkit.telemetry.hybridContent.enabled", false);
lockPref("toolkit.telemetry.newProfilePing.enabled", false);
lockPref("toolkit.telemetry.prompted", 2);
lockPref("toolkit.telemetry.rejected", true);
lockPref("toolkit.telemetry.reportingpolicy.firstRun", false);
lockPref("toolkit.telemetry.server", "");
lockPref("toolkit.telemetry.shutdownPingSender.enabled", false);
lockPref("toolkit.telemetry.unified", false);
lockPref("toolkit.telemetry.unifiedIsOptIn", false);
lockPref("toolkit.telemetry.updatePing.enabled", false);
lockPref("webgl.disabled", true);
lockPref("webgl.renderer-string-override", " ");
lockPref("webgl.vendor-string-override", " ");
